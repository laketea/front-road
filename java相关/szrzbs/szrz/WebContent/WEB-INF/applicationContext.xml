<?xml version="1.0" encoding="GBK"?>
<!-- 指定Spring配置文件的Schema信息 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- 设置连接数据库的驱动、URL、用户名、密码 连接池最大连接数、最小连接数、初始连接数等参数 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" p:driverClass="com.mysql.jdbc.Driver"
		p:jdbcUrl="jdbc:mysql://localhost:3306/szrz" p:user="root" p:password="123456"
		p:maxPoolSize="40" p:minPoolSize="1" p:initialPoolSize="1"
		p:maxIdleTime="20" />

	<!-- 定义Hibernate的SessionFactory -->
	<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>com/szrz/domain/Admin.hbm.xml</value>
				<value>com/szrz/domain/UserInfo.hbm.xml</value>
				<value>com/szrz/domain/LoginInfo.hbm.xml</value>
				<value>com/szrz/domain/User.hbm.xml</value>
				<value>com/szrz/domain/CopyRightImg.hbm.xml</value>
				<value>com/szrz/domain/AntiImg.hbm.xml</value>
				<value>com/szrz/domain/ImgType.hbm.xml</value>
				<value>com/szrz/domain/PurImg.hbm.xml</value>
				<value>com/szrz/domain/NewsType.hbm.xml</value>
				<value>com/szrz/domain/News.hbm.xml</value>
				<value>com/szrz/domain/GuestBookType.hbm.xml</value>
				<value>com/szrz/domain/GuestBook.hbm.xml</value>
				<!--Replace HBM -->

			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<!-- 指定数据库方言、是否自动建表 是否生成SQL语句等 -->
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
				hibernate.hbm2ddl.auto=update
				hibernate.show_sql=true
				hibernate.format_sql=true
			</value>
		</property>
	</bean>

	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
	<!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现 -->
	<!-- 并注入SessionFactory的引用 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />

	<!-- 配置事务增强处理Bean,指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 用于配置详细的事务语义 -->
		<tx:attributes>
			<!-- 所有以'get'开头的方法是read-only的 -->
			<tx:method name="get*" read-only="true" />
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 配置一个切入点，匹配empManager和mgrManager 两个Bean的所有方法的执行 -->
		<aop:pointcut id="leePointcut" expression="bean(empManager)||bean(mgrManager)" />
		<!-- 指定在leePointcut切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="leePointcut" />
	</aop:config>

	<!-- 定义业务逻辑组件模板 -->
	<!-- 为之注入DAO组件 -->
	<bean id="managerTemplate" abstract="true" lazy-init="true"
		p:adminDao-ref="adminDao" />
	<bean id="userInfoTemplate" abstract="true" lazy-init="true"
		p:userInfoDao-ref="userInfoDao" />
	<bean id="loginInfoTemplate" abstract="true" lazy-init="true"
		p:loginInfoDao-ref="loginInfoDao" />
	<bean id="userTemplate" abstract="true" lazy-init="true"
		p:userDao-ref="userDao" />
	<bean id="copyRightImgTemplate" abstract="true" lazy-init="true"
		p:copyRightImgDao-ref="copyRightImgDao" />
	<bean id="antiImgTemplate" abstract="true" lazy-init="true"
		p:antiImgDao-ref="antiImgDao" />
	<bean id="imgTypeTemplate" abstract="true" lazy-init="true"
		p:imgTypeDao-ref="imgTypeDao" />
	<bean id="purImgTemplate" abstract="true" lazy-init="true"
		p:purImgDao-ref="purImgDao" />
	<bean id="newsTypeTemplate" abstract="true" lazy-init="true"
		p:newsTypeDao-ref="newsTypeDao" />
	<bean id="newsTemplate" abstract="true" lazy-init="true"
		p:newsDao-ref="newsDao" />
	<bean id="guestBookTypeTemplate" abstract="true" lazy-init="true"
		p:guestBookTypeDao-ref="guestBookTypeDao" />
	<bean id="guestBookTemplate" abstract="true" lazy-init="true"
		p:guestBookDao-ref="guestBookDao" />





	<!--Replace 业务模版 -->


	<!-- 定义两个业务逻辑组件，继承业务逻辑组件的模板 -->
	<bean id="adminManager" class="com.szrz.service.impl.AdminManagerImpl"
		parent="managerTemplate" />
	<bean id="userInfoManager" class="com.szrz.service.impl.UserInfoManagerImpl"
		parent="userInfoTemplate" />
	<bean id="loginInfoManager" class="com.szrz.service.impl.LoginInfoManagerImpl"
		parent="loginInfoTemplate" />
	<bean id="userManager" class="com.szrz.service.impl.UserManagerImpl"
		parent="userTemplate" />
	<bean id="copyRightImgManager" class="com.szrz.service.impl.CopyRightImgManagerImpl"
		parent="copyRightImgTemplate" />
	<bean id="antiImgManager" class="com.szrz.service.impl.AntiImgManagerImpl"
		parent="antiImgTemplate" />
	<bean id="imgTypeManager" class="com.szrz.service.impl.ImgTypeManagerImpl"
		parent="imgTypeTemplate" />
	<bean id="purImgManager" class="com.szrz.service.impl.PurImgManagerImpl"
		parent="purImgTemplate" />
	<bean id="newsTypeManager" class="com.szrz.service.impl.NewsTypeManagerImpl"
		parent="newsTypeTemplate" />
	<bean id="newsManager" class="com.szrz.service.impl.NewsManagerImpl"
		parent="newsTemplate" />
	<bean id="guestBookTypeManager" class="com.szrz.service.impl.GuestBookTypeManagerImpl"
		parent="guestBookTypeTemplate" />
	<bean id="guestBookManager" class="com.szrz.service.impl.GuestBookManagerImpl"
		parent="guestBookTemplate" />
	<!--Replace 业务逻辑 -->


</beans>